var documenterSearchIndex = {"docs":
[{"location":"guide/s_vector.html#Introduction","page":"Vector","title":"Introduction","text":"","category":"section"},{"location":"guide/s_vector.html","page":"Vector","title":"Vector","text":"It provides a lot of subroutines to manupulate the vectors.","category":"page"},{"location":"guide/s_vector.html#Type","page":"Vector","title":"Type","text":"","category":"section"},{"location":"guide/s_vector.html","page":"Vector","title":"Vector","text":"subroutines","category":"page"},{"location":"guide/s_vector.html#Source","page":"Vector","title":"Source","text":"","category":"section"},{"location":"guide/s_vector.html","page":"Vector","title":"Vector","text":"src/s_vector.f90","category":"page"},{"location":"guide/s_vector.html#Usage","page":"Vector","title":"Usage","text":"","category":"section"},{"location":"guide/s_vector.html","page":"Vector","title":"Vector","text":"(1) Mesh generation","category":"page"},{"location":"guide/s_vector.html","page":"Vector","title":"Vector","text":"subroutine s_linspace_i(...)\nsubroutine s_linspace_d(...)\nsubroutine s_linspace_z(...)","category":"page"},{"location":"guide/s_vector.html","page":"Vector","title":"Vector","text":"(2) Calculate sum of vector.","category":"page"},{"location":"guide/s_vector.html","page":"Vector","title":"Vector","text":"subroutine s_cumsum_i(...)\nsubroutine s_cumsum_d(...)\nsubroutine s_cumsum_z(...)","category":"page"},{"location":"guide/s_vector.html","page":"Vector","title":"Vector","text":"(3) Calculate product of vector.","category":"page"},{"location":"guide/s_vector.html","page":"Vector","title":"Vector","text":"subroutine s_cumprod_i(...)\nsubroutine s_cumprod_d(...)\nsubroutine s_cumprod_z(...)","category":"page"},{"location":"guide/s_vector.html","page":"Vector","title":"Vector","text":"(4) Swap two vectors.","category":"page"},{"location":"guide/s_vector.html","page":"Vector","title":"Vector","text":"subroutine s_swap_i(...)\nsubroutine s_swap_d(...)\nsubroutine s_swap_z(...)","category":"page"},{"location":"guide/s_vector.html","page":"Vector","title":"Vector","text":"(5) Linear mixing for vectors.","category":"page"},{"location":"guide/s_vector.html","page":"Vector","title":"Vector","text":"subroutine s_mix_i(...)\nsubroutine s_mix_d(...)\nsubroutine s_mix_z(...)","category":"page"},{"location":"guide/s_vector.html","page":"Vector","title":"Vector","text":"(6) Convert diagonal elements of matrix to vector.","category":"page"},{"location":"guide/s_vector.html","page":"Vector","title":"Vector","text":"subroutine s_vecadd_i(...)\nsubroutine s_vecadd_d(...)\nsubroutine s_vecadd_z(...)","category":"page"},{"location":"guide/m_spring.html#Introduction","page":"Pseudorandom number generator","title":"Introduction","text":"","category":"section"},{"location":"guide/m_spring.html","page":"Pseudorandom number generator","title":"Pseudorandom number generator","text":"The following two random number generators (generates a random number between 0 and 1, real double precision) are supported by now.","category":"page"},{"location":"guide/m_spring.html","page":"Pseudorandom number generator","title":"Pseudorandom number generator","text":"MT19937","category":"page"},{"location":"guide/m_spring.html","page":"Pseudorandom number generator","title":"Pseudorandom number generator","text":"Mersenne Twister pseudorandom number generator\nby Makoto Matsumoto and Takuji Nishimura\nMersenne Twister: A 623-dimensionally equidistributed uniform pseudorandom number generator\nACM Trans. on Modeling and Computer Simulation Vol. 8, No. 1, January pp.3-30 (1998).","category":"page"},{"location":"guide/m_spring.html","page":"Pseudorandom number generator","title":"Pseudorandom number generator","text":"SFMT","category":"page"},{"location":"guide/m_spring.html","page":"Pseudorandom number generator","title":"Pseudorandom number generator","text":"SIMD-oriented Fast Mersenne Twister\nby Mutsuo Saito and Makoto Matsumoto\nSIMD-oriented Fast Mersenne Twister: a 128-bit Pseudorandom Number Generator\nMonte Carlo and Quasi-Monte Carlo Methods 2006, Springer, 2008, pp. 607-622.","category":"page"},{"location":"guide/m_spring.html#Type","page":"Pseudorandom number generator","title":"Type","text":"","category":"section"},{"location":"guide/m_spring.html","page":"Pseudorandom number generator","title":"Pseudorandom number generator","text":"module","category":"page"},{"location":"guide/m_spring.html#Source","page":"Pseudorandom number generator","title":"Source","text":"","category":"section"},{"location":"guide/m_spring.html","page":"Pseudorandom number generator","title":"Pseudorandom number generator","text":"src/m_spring.f90","category":"page"},{"location":"guide/m_spring.html#Usage","page":"Pseudorandom number generator","title":"Usage","text":"","category":"section"},{"location":"guide/m_spring.html","page":"Pseudorandom number generator","title":"Pseudorandom number generator","text":"(1) Use MT19937.","category":"page"},{"location":"guide/m_spring.html","page":"Pseudorandom number generator","title":"Pseudorandom number generator","text":"use spring\ncall spring_mt_init(seed)\nr = spring_mt_stream()\nr = spring_mt_string()","category":"page"},{"location":"guide/m_spring.html","page":"Pseudorandom number generator","title":"Pseudorandom number generator","text":"(2) Use SFMT","category":"page"},{"location":"guide/m_spring.html","page":"Pseudorandom number generator","title":"Pseudorandom number generator","text":"use spring\ncall spring_sfmt_init(seed)\nr = spring_sfmt_stream()\nr = spring_sfmt_string()","category":"page"},{"location":"guide/m_spring.html","page":"Pseudorandom number generator","title":"Pseudorandom number generator","text":"Note: Since SFMT has a better performance, it is preferable.","category":"page"},{"location":"guide/s_matrix.html#Introduction","page":"-","title":"Introduction","text":"","category":"section"},{"location":"guide/s_matrix.html","page":"-","title":"-","text":"It provides a lot of subroutines to manipulate the matrix and implement the linear algebra.","category":"page"},{"location":"guide/s_matrix.html#Type","page":"-","title":"Type","text":"","category":"section"},{"location":"guide/s_matrix.html","page":"-","title":"-","text":"subroutines","category":"page"},{"location":"guide/s_matrix.html#Source","page":"-","title":"Source","text":"","category":"section"},{"location":"guide/s_matrix.html","page":"-","title":"-","text":"src/s_matrix.f90","category":"page"},{"location":"guide/s_matrix.html#Usage","page":"-","title":"Usage","text":"","category":"section"},{"location":"guide/s_matrix.html","page":"-","title":"-","text":"(1) Build constants (0) matrix.","category":"page"},{"location":"guide/s_matrix.html","page":"-","title":"-","text":"subroutine s_zeros_i(...)\nsubroutine s_zeros_d(...)\nsubroutine s_zeros_z(...)","category":"page"},{"location":"guide/s_matrix.html","page":"-","title":"-","text":"(2) Build constants (1) matrix.","category":"page"},{"location":"guide/s_matrix.html","page":"-","title":"-","text":"subroutine s_ones_i(...)\nsubroutine s_ones_d(...)\nsubroutine s_ones_z(...)","category":"page"},{"location":"guide/s_matrix.html","page":"-","title":"-","text":"(3) Build constants (any values) matrix.","category":"page"},{"location":"guide/s_matrix.html","page":"-","title":"-","text":"subroutine s_any_i(...)\nsubroutine s_any_d(...)\nsubroutine s_any_z(...)","category":"page"},{"location":"guide/s_matrix.html","page":"-","title":"-","text":"(4) Build diagonal matrix.","category":"page"},{"location":"guide/s_matrix.html","page":"-","title":"-","text":"subroutine s_eye_i(...)\nsubroutine s_eye_d(...)\nsubroutine s_eye_z(...)","category":"page"},{"location":"guide/s_matrix.html","page":"-","title":"-","text":"(5) Build identity matrix.","category":"page"},{"location":"guide/s_matrix.html","page":"-","title":"-","text":"subroutine s_identity_i(...)\nsubroutine s_identity_d(...)\nsubroutine s_identity_z(...)","category":"page"},{"location":"guide/s_matrix.html","page":"-","title":"-","text":"(6) Build diagonal matrix from vector.","category":"page"},{"location":"guide/s_matrix.html","page":"-","title":"-","text":"subroutine s_diag_i(...)\nsubroutine s_diag_d(...)\nsubroutine s_diag_z(...)","category":"page"},{"location":"guide/s_matrix.html","page":"-","title":"-","text":"(7) Calculate trace for matrix.","category":"page"},{"location":"guide/s_matrix.html","page":"-","title":"-","text":"subroutine s_trace_d(...)\nsubroutine s_trace_z(...)","category":"page"},{"location":"guide/s_matrix.html","page":"-","title":"-","text":"(8) Calculate determinant for matrix.","category":"page"},{"location":"guide/s_matrix.html","page":"-","title":"-","text":"subroutine s_det_d(...)\nsubroutine s_det_z(...)","category":"page"},{"location":"guide/s_matrix.html","page":"-","title":"-","text":"(9) Calculate matrix inversion.","category":"page"},{"location":"guide/s_matrix.html","page":"-","title":"-","text":"subroutine s_inv_d(...)\nsubroutine s_inv_z(...)","category":"page"},{"location":"guide/s_matrix.html","page":"-","title":"-","text":"(10) General eigensystem problem.","category":"page"},{"location":"guide/s_matrix.html","page":"-","title":"-","text":"subroutine s_eig_dg(...)\nsubroutine s_eig_zg(...)\nsubroutine s_eigvals_dg(...)\nsubroutine s_eigvals_zg(...)","category":"page"},{"location":"guide/s_matrix.html","page":"-","title":"-","text":"(11) Symmetric eigensystem problem.","category":"page"},{"location":"guide/s_matrix.html","page":"-","title":"-","text":"subroutine s_eig_sy(...)\nsubroutine s_eig_he(...)\nsubroutine s_eigvals_sy(...)\nsubroutine s_eigvals_he(...)","category":"page"},{"location":"guide/s_matrix.html","page":"-","title":"-","text":"(12) Linear equation solver.","category":"page"},{"location":"guide/s_matrix.html","page":"-","title":"-","text":"subroutine s_solve_dg(...)\nsubroutine s_solve_zg(...)\nsubroutine s_solve_sy(...)\nsubroutine s_solve_he(...)","category":"page"},{"location":"guide/s_matrix.html","page":"-","title":"-","text":"(13) General singular value decomposition.","category":"page"},{"location":"guide/s_matrix.html","page":"-","title":"-","text":"subroutine s_svd_dg(...)\nsubroutine s_svd_zg(...)","category":"page"},{"location":"guide/s_matrix.html","page":"-","title":"-","text":"Note: _i means integer version, _d real(dp) version, and _z complex(dp) version. _dg means real(dp) general version, _zg complex(dp) general version, _sy real(dp) symmetric version, _he complex(dp) Hermitian version.","category":"page"},{"location":"install.html","page":"Installation","title":"Installation","text":"As mentioned before, almost all of my Fortran codes depend on the Flink library. So, if you want to try my codes, perhaps you have to compile and install Flink at first. Do not be nervous. It is quite easy.","category":"page"},{"location":"install.html","page":"Installation","title":"Installation","text":"At first, you have to download the latest source codes from the official repository of Flink. If every thing is OK, you will have a compressed file, such as flink.zip or flink.tar.gz. And then you need to decompress it with unzip or tar. The next step is to compile Flink. Please execute the following three commands in your terminal.","category":"page"},{"location":"install.html","page":"Installation","title":"Installation","text":"$ cd flink/build\n$ editor make.inc\n$ make","category":"page"},{"location":"install.html","page":"Installation","title":"Installation","text":"Once the compilation is finished (It takes about a few seconds usually), we can find libflink.a and a lot of *.mod files under the flink/src directory. That is all.","category":"page"},{"location":"install.html","page":"Installation","title":"Installation","text":"note: Note\nIn order to compile Flink, you have to ensure that a MPI-enabled Fortran compiler (which is compatibe with Fortran 2003 standard), and a numerical library which implements the BLAS and LAPACK interfaces (such as Intel MKL), are installed and configured correctly in your system. You can setup your compiling environment via editing the build/make.inc file.See make.inc for more details.","category":"page"},{"location":"guide/m_mpi.html#Introduction","page":"Message passaging interface","title":"Introduction","text":"","category":"section"},{"location":"guide/m_mpi.html","page":"Message passaging interface","title":"Message passaging interface","text":"This module wraps the most useful mpi calls by using generic programming techniques. It supports most of the collective operations (such as BCAST, GATHER, REDUCE, etc.). These subroutines are","category":"page"},{"location":"guide/m_mpi.html","page":"Message passaging interface","title":"Message passaging interface","text":"MPI_INIT()\nMPI_FINALIZE()\nMPI_WTIME()\nMPI_WTICK()\nMPI_BARRIER()\nMPIDIMSCREATE()\nMPICARTCREATE()\nMPICARTCOORDS()\nMPICOMMSPLIT()\nMPICOMMRANK()\nMPICOMMSIZE()\nMPIGETPROCESSOR_NAME()\nMPI_BCAST()\nMPI_GATHER()\nMPI_GATHERV()\nMPI_ALLGATHER()\nMPI_ALLGATHERV()\nMPI_REDUCE()\nMPI_ALLREDUCE()","category":"page"},{"location":"guide/m_mpi.html","page":"Message passaging interface","title":"Message passaging interface","text":"etc. However, none of the point-to-point operations is supported. In the module, we also try to implement a light-weight error handler. Enjoy it!","category":"page"},{"location":"guide/m_mpi.html#Type","page":"Message passaging interface","title":"Type","text":"","category":"section"},{"location":"guide/m_mpi.html","page":"Message passaging interface","title":"Message passaging interface","text":"module","category":"page"},{"location":"guide/m_mpi.html#Source","page":"Message passaging interface","title":"Source","text":"","category":"section"},{"location":"guide/m_mpi.html","page":"Message passaging interface","title":"Message passaging interface","text":"src/m_mpi.f90","category":"page"},{"location":"guide/m_mpi.html#Usage","page":"Message passaging interface","title":"Usage","text":"","category":"section"},{"location":"guide/m_mpi.html","page":"Message passaging interface","title":"Message passaging interface","text":"(1) Include mpi support.","category":"page"},{"location":"guide/m_mpi.html","page":"Message passaging interface","title":"Message passaging interface","text":"use mmpi","category":"page"},{"location":"guide/m_mpi.html","page":"Message passaging interface","title":"Message passaging interface","text":"Please pay attention to the module name. It is mmpi, instead of mpi.","category":"page"},{"location":"guide/m_mpi.html","page":"Message passaging interface","title":"Message passaging interface","text":"(2) Init mpi environment.","category":"page"},{"location":"guide/m_mpi.html","page":"Message passaging interface","title":"Message passaging interface","text":"call mp_init()            ! init mpi environment\ncall mp_comm_rank(myid)   ! get current process it\ncall mp_comm_size(nprocs) ! get number of processes","category":"page"},{"location":"guide/m_mpi.html","page":"Message passaging interface","title":"Message passaging interface","text":"(3) Broadcast data.","category":"page"},{"location":"guide/m_mpi.html","page":"Message passaging interface","title":"Message passaging interface","text":"real(dp), allocatable :: real_data(:,:,:)\ninteger, allocatable :: int_data(:)\ncomplex(dp), allocatable :: cmplx_data(:,:,:,:)\n\ncall mp_bcast(real_data, master)\ncall mp_bcast(int_data, master)\ncall mp_bcast(cmplx_data, master)","category":"page"},{"location":"guide/m_mpi.html","page":"Message passaging interface","title":"Message passaging interface","text":"Here master == 0 which means the master node/root process.","category":"page"},{"location":"guide/m_mpi.html","page":"Message passaging interface","title":"Message passaging interface","text":"(4) Allreduce data.","category":"page"},{"location":"guide/m_mpi.html","page":"Message passaging interface","title":"Message passaging interface","text":"real(dp), allocatable :: real_data(:)\nreal(dp), allocatable :: real_data_mpi(:)\n\ncall mp_allreduce(real_data, real_data_mpi)     ! all-readuce data\nreal_data = real_data_mpi / number_of_processes ! calculate the average","category":"page"},{"location":"guide/m_mpi.html","page":"Message passaging interface","title":"Message passaging interface","text":"(5) Setup barrier.","category":"page"},{"location":"guide/m_mpi.html","page":"Message passaging interface","title":"Message passaging interface","text":"call mp_barrier()","category":"page"},{"location":"guide/m_mpi.html","page":"Message passaging interface","title":"Message passaging interface","text":"(6) Finialize mpi environment.","category":"page"},{"location":"guide/m_mpi.html","page":"Message passaging interface","title":"Message passaging interface","text":"call mp_finalize()","category":"page"},{"location":"guide/s_integrator.html#Introduction","page":"Integration","title":"Introduction","text":"","category":"section"},{"location":"guide/s_integrator.html","page":"Integration","title":"Integration","text":"This module is used to perform simple numerical integration.","category":"page"},{"location":"guide/s_integrator.html#Type","page":"Integration","title":"Type","text":"","category":"section"},{"location":"guide/s_integrator.html","page":"Integration","title":"Integration","text":"subroutines","category":"page"},{"location":"guide/s_integrator.html#Source","page":"Integration","title":"Source","text":"","category":"section"},{"location":"guide/s_integrator.html","page":"Integration","title":"Integration","text":"src/s_integrator.f90","category":"page"},{"location":"guide/s_integrator.html#Usage","page":"Integration","title":"Usage","text":"","category":"section"},{"location":"guide/s_integrator.html","page":"Integration","title":"Integration","text":"To use s_int_trapezoid() or s_int_simpson(), you have to define the integrand at first. For example:","category":"page"},{"location":"guide/s_integrator.html","page":"Integration","title":"Integration","text":" function f(x)\n    use constants, only : dp\n\n    implicit none\n\n    real(dp) :: x\n    real(dp) :: f\n\n    f = x * x\n end function f","category":"page"},{"location":"guide/s_integrator.html","page":"Integration","title":"Integration","text":"Next, you have to determine the lower bound a and upper bound b, and the number of points n. Noted that now both the s_int_trapezoid() and s_int_simpson() functions only support the 1-D numerical integration.","category":"page"},{"location":"guide/s_integrator.html","page":"Integration","title":"Integration","text":"(1) Use s_int_trapezoid().","category":"page"},{"location":"guide/s_integrator.html","page":"Integration","title":"Integration","text":"procedure( real(dp) ) :: s_int_trapezoid\nprocedure( real(dp) ) :: f\nreal(dp) :: val\n\nval = s_int_trapezoid(f, a, b, n)","category":"page"},{"location":"guide/s_integrator.html","page":"Integration","title":"Integration","text":"(2) Use s_int_simpson().","category":"page"},{"location":"guide/s_integrator.html","page":"Integration","title":"Integration","text":"procedure( real(dp) ) :: s_int_simpson\nprocedure( real(dp) ) :: f\nreal(dp) :: val\n\nval = s_int_simpson(f, a, b, n)","category":"page"},{"location":"guide/s_integrator.html#Theory","page":"Integration","title":"Theory","text":"","category":"section"},{"location":"intro.html#Welcome","page":"Introduction","title":"Welcome","text":"","category":"section"},{"location":"intro.html","page":"Introduction","title":"Introduction","text":"Flink is a Fortran utility library. It provides some useful features with which you can develop your scientific computation codes quickly. Actually, almost all of my Fortran codes depend on the Flink library. They are","category":"page"},{"location":"intro.html","page":"Introduction","title":"Introduction","text":"iQIST\nDyson\nAnd so on...","category":"page"},{"location":"intro.html","page":"Introduction","title":"Introduction","text":"note: Note\nFlink obeys the Fortran 2003 standard. ","category":"page"},{"location":"intro.html#Features","page":"Introduction","title":"Features","text":"","category":"section"},{"location":"intro.html","page":"Introduction","title":"Introduction","text":"Modules\nPhysical and numerical constants (src/m_constants.f90)\nLinked list (src/m_linkedlist.f90)\nMessage passing interface (src/m_mpi.f90)\nSparse matrix (src/m_sparse.f90)\nConfiguration file (src/m_parser.f90)\nPseudo random number generator (src/m_spring.f90)\nStack (src/m_stack.f90)\nAnalytical tetrahedron method (src/m_tetra.f90)\nVersion information (src/m_version.f90)\nSubroutines\nWarning and error messages (src/s_error.f90)\nFourier transformation (src/s_fourier.f90)\nSpecial functions (src/s_function.f90)\nNumerical integral (src/s_integrator.f90)\nMatrix computation (src/s_matrix.f90)\nSpline interpolation (src/s_spline.f90)\nSome auxiliary subroutines, such as sorting algorithm (src/s_util.f90)\nVector computation (src/s_vector.90)","category":"page"},{"location":"intro.html#Author","page":"Introduction","title":"Author","text":"","category":"section"},{"location":"intro.html","page":"Introduction","title":"Introduction","text":"Li Huang\nInstitute of Materials, China Academy of Engineering Physics, Sichuan Jiangyou, PRC\nemail: lihuang.dmft at gmail.com","category":"page"},{"location":"guide/s_error.html#Introduction","page":"Error and exception","title":"Introduction","text":"","category":"section"},{"location":"guide/s_error.html","page":"Error and exception","title":"Error and exception","text":"To deal with the error and exception.","category":"page"},{"location":"guide/s_error.html#Type","page":"Error and exception","title":"Type","text":"","category":"section"},{"location":"guide/s_error.html","page":"Error and exception","title":"Error and exception","text":"subroutines","category":"page"},{"location":"guide/s_error.html#Source","page":"Error and exception","title":"Source","text":"","category":"section"},{"location":"guide/s_error.html","page":"Error and exception","title":"Error and exception","text":"src/s_error.f90","category":"page"},{"location":"guide/s_error.html#Usage","page":"Error and exception","title":"Usage","text":"","category":"section"},{"location":"guide/s_error.html","page":"Error and exception","title":"Error and exception","text":"(1) Display the error, exception, or message on the terminal.","category":"page"},{"location":"guide/s_error.html","page":"Error and exception","title":"Error and exception","text":"subroutine s_print_error(...)\nsubroutine s_print_exception(...)\nsubroutine s_print_message(...)","category":"page"},{"location":"guide/s_error.html","page":"Error and exception","title":"Error and exception","text":"(2) Write the error, exception, or message to external file.","category":"page"},{"location":"guide/s_error.html","page":"Error and exception","title":"Error and exception","text":"subroutine s_write_error(...)\nsubroutine s_write_exception(...)\nsubroutine s_write_message(...)","category":"page"},{"location":"guide/s_util.html#Introduction","page":"Utility","title":"Introduction","text":"","category":"section"},{"location":"guide/s_util.html","page":"Utility","title":"Utility","text":"It provides some utility subroutines and functions.","category":"page"},{"location":"guide/s_util.html#Type","page":"Utility","title":"Type","text":"","category":"section"},{"location":"guide/s_util.html","page":"Utility","title":"Utility","text":"subroutines","category":"page"},{"location":"guide/s_util.html#Source","page":"Utility","title":"Source","text":"","category":"section"},{"location":"guide/s_util.html","page":"Utility","title":"Utility","text":"src/s_util.f90","category":"page"},{"location":"guide/s_util.html#Usage","page":"Utility","title":"Usage","text":"","category":"section"},{"location":"guide/s_util.html","page":"Utility","title":"Utility","text":"(1) C-like assertion.","category":"page"},{"location":"guide/s_util.html","page":"Utility","title":"Utility","text":"subroutine s_assert(...)\nsubroutine s_assert2(...)","category":"page"},{"location":"guide/s_util.html","page":"Utility","title":"Utility","text":"(2) Sort algorithm.","category":"page"},{"location":"guide/s_util.html","page":"Utility","title":"Utility","text":"subroutine s_sorter(...)\nsubroutine s_sorter2(...)\nsubroutine s_qsorter(...)\nsubroutine s_qscorer(...)","category":"page"},{"location":"guide/s_util.html","page":"Utility","title":"Utility","text":"The s_sorter() and s_sorter2() subroutines implement the bubble algorithm, and the s_qsorter() subroutine implements the quick sort algorithm. The s_qscorer() subroutine is called by the s_qsorter() internally. DO NOT call it directly!","category":"page"},{"location":"guide/s_util.html","page":"Utility","title":"Utility","text":"(3) Combination algrbra.","category":"page"},{"location":"guide/s_util.html","page":"Utility","title":"Utility","text":"subroutine s_combination(...)","category":"page"},{"location":"guide/s_util.html","page":"Utility","title":"Utility","text":"(4) String manipulation.","category":"page"},{"location":"guide/s_util.html","page":"Utility","title":"Utility","text":"subroutine s_str_upcase(...)\nsubroutine s_str_lowcase(...)\nsubroutine s_str_count(...)\nsubroutine s_str_compress(...)","category":"page"},{"location":"guide/s_util.html","page":"Utility","title":"Utility","text":"(5) Date time manipulation.","category":"page"},{"location":"guide/s_util.html","page":"Utility","title":"Utility","text":"subroutine s_time_builder(...)\nsubroutine s_time_analyzer(...)","category":"page"},{"location":"guide/s_util.html#Theory","page":"Utility","title":"Theory","text":"","category":"section"},{"location":"guide/m_tetra.html#Introduction","page":"Analytical tetrahedron algorithm","title":"Introduction","text":"","category":"section"},{"location":"guide/m_tetra.html","page":"Analytical tetrahedron algorithm","title":"Analytical tetrahedron algorithm","text":"In this module, two tetrahedron integration algorithms are implemented. They are:","category":"page"},{"location":"guide/m_tetra.html","page":"Analytical tetrahedron algorithm","title":"Analytical tetrahedron algorithm","text":"P. E. Blochl tetrahedron integration algorithm,\nLambin-Vigneron tetrahedron integration algorithm.","category":"page"},{"location":"guide/m_tetra.html","page":"Analytical tetrahedron algorithm","title":"Analytical tetrahedron algorithm","text":"Note that the former is used to calculate the DFT density of states, while the later is used to calculate the lattice Green's functions during the DFT + DMFT calculations. Besides, we also implement three smearing algorithm, which can be used to calculate the DFT density of states as well. They are:","category":"page"},{"location":"guide/m_tetra.html","page":"Analytical tetrahedron algorithm","title":"Analytical tetrahedron algorithm","text":"Gaussian smearing algorithm,\nFermi-Dirac smearing algorithm,\nMarzari-Vanderbilt cold smearing algorithm.","category":"page"},{"location":"guide/m_tetra.html","page":"Analytical tetrahedron algorithm","title":"Analytical tetrahedron algorithm","text":"This module depends on the s_util.f90/s_qsorter() subroutine.","category":"page"},{"location":"guide/m_tetra.html#Type","page":"Analytical tetrahedron algorithm","title":"Type","text":"","category":"section"},{"location":"guide/m_tetra.html","page":"Analytical tetrahedron algorithm","title":"Analytical tetrahedron algorithm","text":"module","category":"page"},{"location":"guide/m_tetra.html#Source","page":"Analytical tetrahedron algorithm","title":"Source","text":"","category":"section"},{"location":"guide/m_tetra.html","page":"Analytical tetrahedron algorithm","title":"Analytical tetrahedron algorithm","text":"src/m_tetra.f90","category":"page"},{"location":"guide/m_tetra.html#Usage","page":"Analytical tetrahedron algorithm","title":"Usage","text":"","category":"section"},{"location":"guide/m_tetra.html","page":"Analytical tetrahedron algorithm","title":"Analytical tetrahedron algorithm","text":"(1) P. E. Blochl tetrahedron integration algorithm.","category":"page"},{"location":"guide/m_tetra.html","page":"Analytical tetrahedron algorithm","title":"Analytical tetrahedron algorithm","text":"call tetra_blochl_weight1(...)","category":"page"},{"location":"guide/m_tetra.html","page":"Analytical tetrahedron algorithm","title":"Analytical tetrahedron algorithm","text":"or","category":"page"},{"location":"guide/m_tetra.html","page":"Analytical tetrahedron algorithm","title":"Analytical tetrahedron algorithm","text":"call tetra_blochl_weight2(...)","category":"page"},{"location":"guide/m_tetra.html","page":"Analytical tetrahedron algorithm","title":"Analytical tetrahedron algorithm","text":"(2) Lambin-Vigneron tetrahedron integration algorithm.","category":"page"},{"location":"guide/m_tetra.html","page":"Analytical tetrahedron algorithm","title":"Analytical tetrahedron algorithm","text":"call tetra_lambin_weight(...)","category":"page"},{"location":"guide/m_tetra.html","page":"Analytical tetrahedron algorithm","title":"Analytical tetrahedron algorithm","text":"(3) Gaussian smearing algorithm.","category":"page"},{"location":"guide/m_tetra.html","page":"Analytical tetrahedron algorithm","title":"Analytical tetrahedron algorithm","text":"call smearing_gauss_weight1(...)","category":"page"},{"location":"guide/m_tetra.html","page":"Analytical tetrahedron algorithm","title":"Analytical tetrahedron algorithm","text":"or","category":"page"},{"location":"guide/m_tetra.html","page":"Analytical tetrahedron algorithm","title":"Analytical tetrahedron algorithm","text":"call smearing_gauss_weight2(...)","category":"page"},{"location":"guide/m_tetra.html","page":"Analytical tetrahedron algorithm","title":"Analytical tetrahedron algorithm","text":"or","category":"page"},{"location":"guide/m_tetra.html","page":"Analytical tetrahedron algorithm","title":"Analytical tetrahedron algorithm","text":"call smearing_gauss_weight3(...)","category":"page"},{"location":"guide/m_tetra.html","page":"Analytical tetrahedron algorithm","title":"Analytical tetrahedron algorithm","text":"(4) Fermi-Dirac smearing algorithm.","category":"page"},{"location":"guide/m_tetra.html","page":"Analytical tetrahedron algorithm","title":"Analytical tetrahedron algorithm","text":"call smearing_fermi_weight1(...)","category":"page"},{"location":"guide/m_tetra.html","page":"Analytical tetrahedron algorithm","title":"Analytical tetrahedron algorithm","text":"or","category":"page"},{"location":"guide/m_tetra.html","page":"Analytical tetrahedron algorithm","title":"Analytical tetrahedron algorithm","text":"call smearing_fermi_weight2(...)","category":"page"},{"location":"guide/m_tetra.html","page":"Analytical tetrahedron algorithm","title":"Analytical tetrahedron algorithm","text":"or","category":"page"},{"location":"guide/m_tetra.html","page":"Analytical tetrahedron algorithm","title":"Analytical tetrahedron algorithm","text":"call smearing_fermi_weight3(...)","category":"page"},{"location":"guide/m_tetra.html","page":"Analytical tetrahedron algorithm","title":"Analytical tetrahedron algorithm","text":"(5) Marzari-Vanderbilt cold smearing algorithm.","category":"page"},{"location":"guide/m_tetra.html","page":"Analytical tetrahedron algorithm","title":"Analytical tetrahedron algorithm","text":"call smearing_marzari_weight1(...)","category":"page"},{"location":"guide/m_tetra.html","page":"Analytical tetrahedron algorithm","title":"Analytical tetrahedron algorithm","text":"or","category":"page"},{"location":"guide/m_tetra.html","page":"Analytical tetrahedron algorithm","title":"Analytical tetrahedron algorithm","text":"call smearing_marzari_weight2(...)","category":"page"},{"location":"guide/m_tetra.html","page":"Analytical tetrahedron algorithm","title":"Analytical tetrahedron algorithm","text":"or","category":"page"},{"location":"guide/m_tetra.html","page":"Analytical tetrahedron algorithm","title":"Analytical tetrahedron algorithm","text":"call smearing_marzari_weight3(...)","category":"page"},{"location":"guide/m_tetra.html#Theory","page":"Analytical tetrahedron algorithm","title":"Theory","text":"","category":"section"},{"location":"guide/s_function.html#Introduction","page":"Special functions","title":"Introduction","text":"","category":"section"},{"location":"guide/s_function.html","page":"Special functions","title":"Special functions","text":"Provide some subroutines to calculate the special functions.","category":"page"},{"location":"guide/s_function.html#Type","page":"Special functions","title":"Type","text":"","category":"section"},{"location":"guide/s_function.html","page":"Special functions","title":"Special functions","text":"subroutines","category":"page"},{"location":"guide/s_function.html#Source","page":"Special functions","title":"Source","text":"","category":"section"},{"location":"guide/s_function.html","page":"Special functions","title":"Special functions","text":"src/s_function.f90","category":"page"},{"location":"guide/s_function.html#Usage","page":"Special functions","title":"Usage","text":"","category":"section"},{"location":"guide/s_function.html","page":"Special functions","title":"Special functions","text":"(1) Orthogonal polynomial basis.","category":"page"},{"location":"guide/s_function.html","page":"Special functions","title":"Special functions","text":"subroutine s_leg_basis(...)\nsubroutine s_che_basis(...)\nsubroutine s_svd_basis(...)\nsubroutine s_svd_point(...)","category":"page"},{"location":"guide/s_function.html","page":"Special functions","title":"Special functions","text":"(2) Spheric Bessel function.","category":"page"},{"location":"guide/s_function.html","page":"Special functions","title":"Special functions","text":"subroutine s_sph_jl(...)","category":"page"},{"location":"guide/s_function.html","page":"Special functions","title":"Special functions","text":"(3) Bernstein polynomial.","category":"page"},{"location":"guide/s_function.html","page":"Special functions","title":"Special functions","text":"subroutine s_bezier(...)","category":"page"},{"location":"guide/s_function.html","page":"Special functions","title":"Special functions","text":"(4) Some helper functions for ssvdbasis().","category":"page"},{"location":"guide/s_function.html","page":"Special functions","title":"Special functions","text":"function s_safe_exp(...)\nfunction s_f_kernel(...)\nfunction s_b_kernel(...)","category":"page"},{"location":"guide/s_function.html#Theory","page":"Special functions","title":"Theory","text":"","category":"section"},{"location":"guide/s_fourier.html#Introduction","page":"Fourier transformation","title":"Introduction","text":"","category":"section"},{"location":"guide/s_fourier.html","page":"Fourier transformation","title":"Fourier transformation","text":"Support forward and backward fourier transformation. We usually use the following subroutines to perform fourier transformation for the Green's function.","category":"page"},{"location":"guide/s_fourier.html#Type","page":"Fourier transformation","title":"Type","text":"","category":"section"},{"location":"guide/s_fourier.html","page":"Fourier transformation","title":"Fourier transformation","text":"subroutines","category":"page"},{"location":"guide/s_fourier.html#Source","page":"Fourier transformation","title":"Source","text":"","category":"section"},{"location":"guide/s_fourier.html","page":"Fourier transformation","title":"Fourier transformation","text":"src/s_fourier.f90","category":"page"},{"location":"guide/s_fourier.html#Usage","page":"Fourier transformation","title":"Usage","text":"","category":"section"},{"location":"guide/s_fourier.html","page":"Fourier transformation","title":"Fourier transformation","text":"(1) Forward FFT, from G(tau) to G(iomega_n).","category":"page"},{"location":"guide/s_fourier.html","page":"Fourier transformation","title":"Fourier transformation","text":"subroutine s_fft_forward(...)","category":"page"},{"location":"guide/s_fourier.html","page":"Fourier transformation","title":"Fourier transformation","text":"(2) Backward FFT, from G(iomega_n) to G(tau)","category":"page"},{"location":"guide/s_fourier.html","page":"Fourier transformation","title":"Fourier transformation","text":"subroutine s_fft_backward(...)\nsubroutine s_fft_tails(...)","category":"page"},{"location":"guide/s_fourier.html","page":"Fourier transformation","title":"Fourier transformation","text":"note: Note\nThe s_fft_tails() subroutine is called by the s_fft_backward() subroutine internally. DO NOT call it directly!","category":"page"},{"location":"guide/s_fourier.html#Theory","page":"Fourier transformation","title":"Theory","text":"","category":"section"},{"location":"appendix/make.html#Introduction","page":"make.sys","title":"Introduction","text":"","category":"section"},{"location":"appendix/make.html","page":"make.sys","title":"make.sys","text":"The make.inc file is the key component of the building system. You have to modify it to fulfill your requirements. If it is not configured correctly, the building system won't work correctly as well. So in the following we would like to provide a detailed explanations for it.","category":"page"},{"location":"appendix/make.html#Prerequisites","page":"make.sys","title":"Prerequisites","text":"","category":"section"},{"location":"appendix/make.html#Operation-system","page":"make.sys","title":"Operation system","text":"","category":"section"},{"location":"appendix/make.html","page":"make.sys","title":"make.sys","text":"Linux\nmacOS","category":"page"},{"location":"appendix/make.html#Fortran-compiler","page":"make.sys","title":"Fortran compiler","text":"","category":"section"},{"location":"appendix/make.html","page":"make.sys","title":"make.sys","text":"Intel Fortran Compiler","category":"page"},{"location":"appendix/make.html#Linear-algebra-library","page":"make.sys","title":"Linear algebra library","text":"","category":"section"},{"location":"appendix/make.html","page":"make.sys","title":"make.sys","text":"Apple Accelerate framework\nReference implementations for BLAS and LAPACK at Netlib\nIntel Math Kernel Library","category":"page"},{"location":"appendix/make.html#MPI-environment","page":"make.sys","title":"MPI environment","text":"","category":"section"},{"location":"appendix/make.html","page":"make.sys","title":"make.sys","text":"MPICH\nOpenmpi","category":"page"},{"location":"appendix/make.html#OpenMP-environment","page":"make.sys","title":"OpenMP environment","text":"","category":"section"},{"location":"appendix/make.html","page":"make.sys","title":"make.sys","text":"(Optional)","category":"page"},{"location":"appendix/make.html","page":"make.sys","title":"make.sys","text":"Though it is not mandatory, we still strongly recommend to update the above software components on your systems to the latest versions. The OpenMP environment is optional.","category":"page"},{"location":"appendix/make.html#Explanations","page":"make.sys","title":"Explanations","text":"","category":"section"},{"location":"appendix/make.html#F90","page":"make.sys","title":"F90","text":"","category":"section"},{"location":"appendix/make.html","page":"make.sys","title":"make.sys","text":"The Fortran compiler. Both the parallel and sequential Fortran compilers are supported. Note that only the Intel Fortran compiler was extensively tested. And we recommend to use the very latest version of Intel Fortran compiler (i.e, Intel Parallel Studio 2019).","category":"page"},{"location":"appendix/make.html","page":"make.sys","title":"make.sys","text":"Possible options:","category":"page"},{"location":"appendix/make.html","page":"make.sys","title":"make.sys","text":"mpif90\nmpifort\nmpiifort\nifort","category":"page"},{"location":"appendix/make.html#LINKER","page":"make.sys","title":"LINKER","text":"","category":"section"},{"location":"appendix/make.html","page":"make.sys","title":"make.sys","text":"Linker. Here it should be the same with the Fortran compiler. Do not change it.","category":"page"},{"location":"appendix/make.html","page":"make.sys","title":"make.sys","text":"Possible options:","category":"page"},{"location":"appendix/make.html","page":"make.sys","title":"make.sys","text":"F90","category":"page"},{"location":"appendix/make.html#ARCHIVER","page":"make.sys","title":"ARCHIVER","text":"","category":"section"},{"location":"appendix/make.html","page":"make.sys","title":"make.sys","text":"Archiver. It is used to pack the binary objects into a library. Do not modify it for ever.","category":"page"},{"location":"appendix/make.html","page":"make.sys","title":"make.sys","text":"Possible options:","category":"page"},{"location":"appendix/make.html","page":"make.sys","title":"make.sys","text":"ar -ruv","category":"page"},{"location":"appendix/make.html#MPI","page":"make.sys","title":"MPI","text":"","category":"section"},{"location":"appendix/make.html","page":"make.sys","title":"make.sys","text":"Specify whether MPI is enable. If you want to compile a sequential code, please comment it out with '#' symbol and then setup F90 to 'ifort'. We strongly suggest to compile the MPI parallelized codes.","category":"page"},{"location":"appendix/make.html","page":"make.sys","title":"make.sys","text":"Possible options:","category":"page"},{"location":"appendix/make.html","page":"make.sys","title":"make.sys","text":"-DMPI","category":"page"},{"location":"appendix/make.html#OMP","page":"make.sys","title":"OMP","text":"","category":"section"},{"location":"appendix/make.html","page":"make.sys","title":"make.sys","text":"Specify whether OpenMP is enable. If you want to disable it, please comment it out. In default it is disabled. So far the OpenMP was used to speedup the measurements of some selected two-particle quantities.","category":"page"},{"location":"appendix/make.html","page":"make.sys","title":"make.sys","text":"Possible options:","category":"page"},{"location":"appendix/make.html","page":"make.sys","title":"make.sys","text":"-qopenmp","category":"page"},{"location":"appendix/make.html","page":"make.sys","title":"make.sys","text":"If you are using old version Intel Fortran compiler, this option may be '-openmp'.","category":"page"},{"location":"appendix/make.html#FPP","page":"make.sys","title":"FPP","text":"","category":"section"},{"location":"appendix/make.html","page":"make.sys","title":"make.sys","text":"Specify whether the Fortran preprocessor (FPP) is used. It has to be enabled or else the source codes can not be compiled correctly.","category":"page"},{"location":"appendix/make.html","page":"make.sys","title":"make.sys","text":"Possible options:","category":"page"},{"location":"appendix/make.html","page":"make.sys","title":"make.sys","text":"-fpp","category":"page"},{"location":"appendix/make.html#CPP","page":"make.sys","title":"CPP","text":"","category":"section"},{"location":"appendix/make.html","page":"make.sys","title":"make.sys","text":"Collection of preprocessor directives. Do not modify it unless you are an expert.","category":"page"},{"location":"appendix/make.html","page":"make.sys","title":"make.sys","text":"Possible options:","category":"page"},{"location":"appendix/make.html","page":"make.sys","title":"make.sys","text":"FPP\nMPI\nOMP","category":"page"},{"location":"appendix/make.html","page":"make.sys","title":"make.sys","text":"Please make sure that the 'FPP' option is always present.","category":"page"},{"location":"appendix/make.html#CHECK","page":"make.sys","title":"CHECK","text":"","category":"section"},{"location":"appendix/make.html","page":"make.sys","title":"make.sys","text":"Used to specify what types of check should be done.","category":"page"},{"location":"appendix/make.html","page":"make.sys","title":"make.sys","text":"Possible options:","category":"page"},{"location":"appendix/make.html","page":"make.sys","title":"make.sys","text":"-nogen-interfaces\n-warn all\n-check all\n-traceback\n-g","category":"page"},{"location":"appendix/make.html","page":"make.sys","title":"make.sys","text":"The '-nogen-interfaces' option ask the compiler to do not generate an interface block for each routine defined in the source file. The '-warn all' option means the check is done in compiling. The '-check all' option means the check will be done in running. The '-traceback' option enables us to track the exact position (line number and file name) where an error occurs. The '-g' option enables the compiler to generate debug information and embed them into the final program. Note that all of the '-check all', '-traceback', and '-g' options will decrease the efficiency greatly.","category":"page"},{"location":"appendix/make.html#MTUNE","page":"make.sys","title":"MTUNE","text":"","category":"section"},{"location":"appendix/make.html","page":"make.sys","title":"make.sys","text":"Collection of optimization options.","category":"page"},{"location":"appendix/make.html","page":"make.sys","title":"make.sys","text":"Possible options:","category":"page"},{"location":"appendix/make.html","page":"make.sys","title":"make.sys","text":"-O3\n-xHost","category":"page"},{"location":"appendix/make.html","page":"make.sys","title":"make.sys","text":"The '-O3' option means the highest optimization. The '-xHost' option enables the compiler to try to generate the most suitable code for the current computer architecture.","category":"page"},{"location":"appendix/make.html#FFLAGS","page":"make.sys","title":"FFLAGS","text":"","category":"section"},{"location":"appendix/make.html","page":"make.sys","title":"make.sys","text":"Collection of Fortran compiler options. Do not modify them for ever.","category":"page"},{"location":"appendix/make.html","page":"make.sys","title":"make.sys","text":"Possible options:","category":"page"},{"location":"appendix/make.html","page":"make.sys","title":"make.sys","text":"-c\nCPP\nCHECK\nMTUNE","category":"page"},{"location":"appendix/make.html#LFLAGS","page":"make.sys","title":"LFLAGS","text":"","category":"section"},{"location":"appendix/make.html","page":"make.sys","title":"make.sys","text":"Collection of linker options. Do not modify them unless you know what you are doing.","category":"page"},{"location":"appendix/make.html","page":"make.sys","title":"make.sys","text":"Possible options:","category":"page"},{"location":"appendix/make.html","page":"make.sys","title":"make.sys","text":"OMP\n-Wl,-no_pie","category":"page"},{"location":"appendix/make.html","page":"make.sys","title":"make.sys","text":"The '-Wl,-no_pie' option is useful when you are using the macOS system and want to traceback the code (the -traceback option is applied). If you are using the Linux system, you can skip it.","category":"page"},{"location":"appendix/make.html#LIBS","page":"make.sys","title":"LIBS","text":"","category":"section"},{"location":"appendix/make.html","page":"make.sys","title":"make.sys","text":"Specify the external libraries. Now the this software package depends on LAPACK and BLAS heavily. To achieve good performance, the highly optimized LAPACK and BLAS implementations are essential.","category":"page"},{"location":"appendix/make.html","page":"make.sys","title":"make.sys","text":"Possible options:","category":"page"},{"location":"appendix/make.html","page":"make.sys","title":"make.sys","text":"-framework Accelerate\n-L/home/lihuang/lapack -llapack -lblas\n-L/opt/intel/mkl/lib -lmklcore -lmklsequential -lmkl_rt","category":"page"},{"location":"appendix/make.html","page":"make.sys","title":"make.sys","text":"Here we provide three typical choices. (1) In the macOS system, we can use the Apple Accelerate framework. (2) We use the home-built BLAS and LAPACK libraries. Please pay attention to the path. You have to modify it to meet your software environment. (3) We link our codes with the Intel MKL. Please pay attention to the path and the library's name. You have to modify them to meet your software environment. Please see the documentation about Intel MKL for more details.","category":"page"},{"location":"guide/m_sparse.html#Introduction","page":"Sparse matrix","title":"Introduction","text":"","category":"section"},{"location":"guide/m_sparse.html","page":"Sparse matrix","title":"Sparse matrix","text":"In this module, we implement some basic sparse matrix algebra. Now it supports double precision real and complex numbers.","category":"page"},{"location":"guide/m_sparse.html#Type","page":"Sparse matrix","title":"Type","text":"","category":"section"},{"location":"guide/m_sparse.html","page":"Sparse matrix","title":"Sparse matrix","text":"module","category":"page"},{"location":"guide/m_sparse.html#Source","page":"Sparse matrix","title":"Source","text":"","category":"section"},{"location":"guide/m_sparse.html","page":"Sparse matrix","title":"Sparse matrix","text":"src/m_sparse.f90","category":"page"},{"location":"guide/m_sparse.html#Usage","page":"Sparse matrix","title":"Usage","text":"","category":"section"},{"location":"guide/m_sparse.html","page":"Sparse matrix","title":"Sparse matrix","text":"(1) Import sparse module support.","category":"page"},{"location":"guide/m_sparse.html","page":"Sparse matrix","title":"Sparse matrix","text":"use sparse","category":"page"},{"location":"guide/m_sparse.html","page":"Sparse matrix","title":"Sparse matrix","text":"(2) Convert normal matrix to sparse matrix.","category":"page"},{"location":"guide/m_sparse.html","page":"Sparse matrix","title":"Sparse matrix","text":"call sp_csr_to_dns(...)","category":"page"},{"location":"guide/m_sparse.html","page":"Sparse matrix","title":"Sparse matrix","text":"(3) Convert sparse matrix to normal matrix.","category":"page"},{"location":"guide/m_sparse.html","page":"Sparse matrix","title":"Sparse matrix","text":"call sp_dns_to_csr(...)","category":"page"},{"location":"guide/m_sparse.html","page":"Sparse matrix","title":"Sparse matrix","text":"(4) Perform sparse matrix - vector multiplication.","category":"page"},{"location":"guide/m_sparse.html","page":"Sparse matrix","title":"Sparse matrix","text":"call sp_csr_mv_vec(...)","category":"page"},{"location":"guide/m_sparse.html","page":"Sparse matrix","title":"Sparse matrix","text":"(5) Perform sparse matrix - matrix multiplication.","category":"page"},{"location":"guide/m_sparse.html","page":"Sparse matrix","title":"Sparse matrix","text":"call sp_csr_mm_csr(...)","category":"page"},{"location":"guide/m_sparse.html","page":"Sparse matrix","title":"Sparse matrix","text":"Specifically, if one of the matrix is diagonal matrix, then you can use","category":"page"},{"location":"guide/m_sparse.html","page":"Sparse matrix","title":"Sparse matrix","text":"call sp_dia_mm_csr(...)","category":"page"},{"location":"guide/m_sparse.html","page":"Sparse matrix","title":"Sparse matrix","text":"or","category":"page"},{"location":"guide/m_sparse.html","page":"Sparse matrix","title":"Sparse matrix","text":"call sp_csr_mm_dia(...)","category":"page"},{"location":"guide/m_sparse.html","page":"Sparse matrix","title":"Sparse matrix","text":"to accelerate the execution.","category":"page"},{"location":"guide/m_linkedlist.html#Introduction","page":"Linked list","title":"Introduction","text":"","category":"section"},{"location":"guide/m_linkedlist.html","page":"Linked list","title":"Linked list","text":"note: Note\nThis implementation of generic linked list in Fortran 90 was taken fromJason R. Blevins's code\njournal: ACM Fortran Forum 28(3), 2-7, 2009.\nwebsite: http://jblevins.org/research/generic-list.Of course, we have adapted the original code to fulfill our requirement.","category":"page"},{"location":"guide/m_linkedlist.html","page":"Linked list","title":"Linked list","text":"This linked list is capable of storing data of an any type by using the generic programming techniques.","category":"page"},{"location":"guide/m_linkedlist.html#Type","page":"Linked list","title":"Type","text":"","category":"section"},{"location":"guide/m_linkedlist.html","page":"Linked list","title":"Linked list","text":"module","category":"page"},{"location":"guide/m_linkedlist.html#Source","page":"Linked list","title":"Source","text":"","category":"section"},{"location":"guide/m_linkedlist.html","page":"Linked list","title":"Linked list","text":"src/m_linkedlist.f90","category":"page"},{"location":"guide/m_linkedlist.html#Usage","page":"Linked list","title":"Usage","text":"","category":"section"},{"location":"guide/m_linkedlist.html","page":"Linked list","title":"Linked list","text":"(1) Include linked list module support.","category":"page"},{"location":"guide/m_linkedlist.html","page":"Linked list","title":"Linked list","text":"use linkedlist","category":"page"},{"location":"guide/m_linkedlist.html","page":"Linked list","title":"Linked list","text":"(2) Define user own data type.","category":"page"},{"location":"guide/m_linkedlist.html","page":"Linked list","title":"Linked list","text":"type data_t\n     ! place your definition here\nend type data_t","category":"page"},{"location":"guide/m_linkedlist.html","page":"Linked list","title":"Linked list","text":"(3) Define pointer to data.","category":"page"},{"location":"guide/m_linkedlist.html","page":"Linked list","title":"Linked list","text":"type (data_t), pointer  :: data_ptr => null()","category":"page"},{"location":"guide/m_linkedlist.html","page":"Linked list","title":"Linked list","text":"(4) Define pointer to list.","category":"page"},{"location":"guide/m_linkedlist.html","page":"Linked list","title":"Linked list","text":"type (list_t), pointer  :: list_ptr => null()","category":"page"},{"location":"guide/m_linkedlist.html","page":"Linked list","title":"Linked list","text":"(5) Prepare data.","category":"page"},{"location":"guide/m_linkedlist.html","page":"Linked list","title":"Linked list","text":"allocate(data_ptr)\ndata_ptr%something = something","category":"page"},{"location":"guide/m_linkedlist.html","page":"Linked list","title":"Linked list","text":"(6) Create a linked list.","category":"page"},{"location":"guide/m_linkedlist.html","page":"Linked list","title":"Linked list","text":"call list_init(list_ptr, transfer(data_ptr, list_d))","category":"page"},{"location":"guide/m_linkedlist.html","page":"Linked list","title":"Linked list","text":"Here list_d is a public variable defined in linkedlist module.","category":"page"},{"location":"guide/m_linkedlist.html","page":"Linked list","title":"Linked list","text":"note: Note\nTo access the data stored in the nodes, we have to use the intrinsic transfer() subroutine.","category":"page"},{"location":"guide/m_linkedlist.html","page":"Linked list","title":"Linked list","text":"(7) Insert new node.","category":"page"},{"location":"guide/m_linkedlist.html","page":"Linked list","title":"Linked list","text":"call list_insert(list_ptr, transfer(data_ptr, list_d))","category":"page"},{"location":"guide/m_linkedlist.html","page":"Linked list","title":"Linked list","text":"list_insert() will always insert the new node after the given node, i.e., list_ptr. If you want to update the data for the given node, please use the following code:","category":"page"},{"location":"guide/m_linkedlist.html","page":"Linked list","title":"Linked list","text":"call list_put(list_ptr, transfer(data_ptr, list_d))","category":"page"},{"location":"guide/m_linkedlist.html","page":"Linked list","title":"Linked list","text":"(8) Visit next node.","category":"page"},{"location":"guide/m_linkedlist.html","page":"Linked list","title":"Linked list","text":"curr => list_next(curr)","category":"page"},{"location":"guide/m_linkedlist.html","page":"Linked list","title":"Linked list","text":"Here curr is a list_t type pointer.","category":"page"},{"location":"guide/m_linkedlist.html","page":"Linked list","title":"Linked list","text":"(9) Retrieve data stored in the node.","category":"page"},{"location":"guide/m_linkedlist.html","page":"Linked list","title":"Linked list","text":"data_ptr  = transfer(list_get(curr), data_ptr)\nsomething = data_ptr%something","category":"page"},{"location":"guide/m_linkedlist.html","page":"Linked list","title":"Linked list","text":"Here curr is a list_t type pointer, it points to the current node.","category":"page"},{"location":"guide/m_linkedlist.html","page":"Linked list","title":"Linked list","text":"(10) Free memory for this linked list.","category":"page"},{"location":"guide/m_linkedlist.html","page":"Linked list","title":"Linked list","text":"call list_free(list_ptr)","category":"page"},{"location":"usage.html","page":"Basic usage","title":"Basic usage","text":"It is quite easy to use the Flink library.","category":"page"},{"location":"usage.html","page":"Basic usage","title":"Basic usage","text":"At first, please look at the user's guide to learn how to call the Flink's subroutines and functions. Notice that some subroutines are encapsulated in various modules, while the others are not.","category":"page"},{"location":"usage.html","page":"Basic usage","title":"Basic usage","text":"Second, modify your source codes carefully.","category":"page"},{"location":"usage.html","page":"Basic usage","title":"Basic usage","text":"Third, if your codes are using some modules of the Flink library, please copy the corresponding *.mod files to your working directory. For example, if your codes need the module spring which is defined in the src/s_spring.f90 file, please copy the spring.mod file to your directory or add it to the INCLUDE_PATH.","category":"page"},{"location":"usage.html","page":"Basic usage","title":"Basic usage","text":"Fourth, modify your Makefile. Notify the linker to link libflink.a to your program. You can use the following syntax:","category":"page"},{"location":"usage.html","page":"Basic usage","title":"Basic usage","text":"$ ifort your_code.f90 -Lpath_to_libflink -lflink -o your_code.x","category":"page"},{"location":"guide/s_spline.html#Introduction","page":"Spline interpolation","title":"Introduction","text":"","category":"section"},{"location":"guide/s_spline.html","page":"Spline interpolation","title":"Spline interpolation","text":"These subroutines are used to perform spline interpolation.","category":"page"},{"location":"guide/s_spline.html#Type","page":"Spline interpolation","title":"Type","text":"","category":"section"},{"location":"guide/s_spline.html","page":"Spline interpolation","title":"Spline interpolation","text":"subroutines","category":"page"},{"location":"guide/s_spline.html#Source","page":"Spline interpolation","title":"Source","text":"","category":"section"},{"location":"guide/s_spline.html","page":"Spline interpolation","title":"Spline interpolation","text":"src/s_spline.f90","category":"page"},{"location":"guide/s_spline.html#Usage","page":"Spline interpolation","title":"Usage","text":"","category":"section"},{"location":"guide/s_spline.html","page":"Spline interpolation","title":"Spline interpolation","text":"(1) Calculate 1-order derivates for a given function.","category":"page"},{"location":"guide/s_spline.html","page":"Spline interpolation","title":"Spline interpolation","text":"subroutine s_spl_deriv1(...)","category":"page"},{"location":"guide/s_spline.html","page":"Spline interpolation","title":"Spline interpolation","text":"(2) Calculate 2-order derivates for a given function.","category":"page"},{"location":"guide/s_spline.html","page":"Spline interpolation","title":"Spline interpolation","text":"subroutine s_spl_deriv2(...)","category":"page"},{"location":"guide/s_spline.html","page":"Spline interpolation","title":"Spline interpolation","text":"(3) Evaluate function value at a given point.","category":"page"},{"location":"guide/s_spline.html","page":"Spline interpolation","title":"Spline interpolation","text":"function   s_spl_funct(...)","category":"page"},{"location":"guide/m_parser.html#Introduction","page":"Configuration parser","title":"Introduction","text":"","category":"section"},{"location":"guide/m_parser.html","page":"Configuration parser","title":"Configuration parser","text":"The original input file format for iQIST is not very good. We need a flexible, convenient, and powerful input file format, and corresponding file reader and parser. Thus, we redesign the input file format and implement this file parser.","category":"page"},{"location":"guide/m_parser.html","page":"Configuration parser","title":"Configuration parser","text":"note: Note\nThis module depends on the linkedlist module internally.","category":"page"},{"location":"guide/m_parser.html#Type","page":"Configuration parser","title":"Type","text":"","category":"section"},{"location":"guide/m_parser.html","page":"Configuration parser","title":"Configuration parser","text":"module","category":"page"},{"location":"guide/m_parser.html#Source","page":"Configuration parser","title":"Source","text":"","category":"section"},{"location":"guide/m_parser.html","page":"Configuration parser","title":"Configuration parser","text":"src/m_parser.f90","category":"page"},{"location":"guide/m_parser.html#Input-File-Format","page":"Configuration parser","title":"Input File Format","text":"","category":"section"},{"location":"guide/m_parser.html","page":"Configuration parser","title":"Configuration parser","text":"(1) Anything after \"#\" and \"!\" character can be treated as comments and will be ignored completely.","category":"page"},{"location":"guide/m_parser.html","page":"Configuration parser","title":"Configuration parser","text":"Example:","category":"page"},{"location":"guide/m_parser.html","page":"Configuration parser","title":"Configuration parser","text":"   # this is a comment line\n   ! this is a comment line\n\n   nband = 4 # this is in line comment\n   norbs = 8 ! this is in line comment","category":"page"},{"location":"guide/m_parser.html","page":"Configuration parser","title":"Configuration parser","text":"(2) It is not case sensitive.","category":"page"},{"location":"guide/m_parser.html","page":"Configuration parser","title":"Configuration parser","text":"Example:","category":"page"},{"location":"guide/m_parser.html","page":"Configuration parser","title":"Configuration parser","text":"   Nband = 4\n   NORBS = 8\n   NspiN = 2","category":"page"},{"location":"guide/m_parser.html","page":"Configuration parser","title":"Configuration parser","text":"(3) The key and value pair is separated by \"=\" or \":\" character.","category":"page"},{"location":"guide/m_parser.html","page":"Configuration parser","title":"Configuration parser","text":"Example:","category":"page"},{"location":"guide/m_parser.html","page":"Configuration parser","title":"Configuration parser","text":"   nband = 4 ! you can use nband : 4\n   norbs : 8 ! you can use norbs = 8","category":"page"},{"location":"guide/m_parser.html","page":"Configuration parser","title":"Configuration parser","text":"(4) Any space will be ignored. Any blank lines will be skipped as well.","category":"page"},{"location":"guide/m_parser.html","page":"Configuration parser","title":"Configuration parser","text":"Example:","category":"page"},{"location":"guide/m_parser.html","page":"Configuration parser","title":"Configuration parser","text":"   n b a n d = 4 ! it is valid\n   no   rb s = 8 ! it is valid","category":"page"},{"location":"guide/m_parser.html","page":"Configuration parser","title":"Configuration parser","text":"(5) You can only use one line to define one key-value pair.","category":"page"},{"location":"guide/m_parser.html","page":"Configuration parser","title":"Configuration parser","text":"Example:","category":"page"},{"location":"guide/m_parser.html","page":"Configuration parser","title":"Configuration parser","text":"   nband = 4 norbs = 8  ! it is not valid\n   nband = 4, norbs = 8 ! it is not valid\n   nband = 4; norbs = 8 ! it is not valid\n   nband =              !\n   4                    ! it is not valid","category":"page"},{"location":"guide/m_parser.html","page":"Configuration parser","title":"Configuration parser","text":"(6) In the value part, now only integer, real(dp), logical, and character data type are support.","category":"page"},{"location":"guide/m_parser.html","page":"Configuration parser","title":"Configuration parser","text":"Example:","category":"page"},{"location":"guide/m_parser.html","page":"Configuration parser","title":"Configuration parser","text":"   nband = 4        ! integer type\n   mune  = 4.0      ! real(dp) type\n   isscf = .true.   ! logical type, you can also use .false., T, F\n   model = anderson ! character type, do not use \"\" or '' characters to quote it","category":"page"},{"location":"guide/m_parser.html","page":"Configuration parser","title":"Configuration parser","text":"(7) In the value part, a vector is also support. the items in the vector should be separated by \",\" character.","category":"page"},{"location":"guide/m_parser.html","page":"Configuration parser","title":"Configuration parser","text":"Example:","category":"page"},{"location":"guide/m_parser.html","page":"Configuration parser","title":"Configuration parser","text":"   nband = 1, 2, 3, 4                   ! 4 items\n   mune = 0.0, -1.0, 2.0                ! 3 items\n   isscf = .true., .true., F, T, .true. ! 5 items\n   model = anderson, hubbard            ! 2 items","category":"page"},{"location":"guide/m_parser.html","page":"Configuration parser","title":"Configuration parser","text":"(8) An empty input file is acceptable.","category":"page"},{"location":"guide/m_parser.html","page":"Configuration parser","title":"Configuration parser","text":"(9) If one key occurs in the input file for more than 1 times, only the last occurrence is recognized.","category":"page"},{"location":"guide/m_parser.html#Usage","page":"Configuration parser","title":"Usage","text":"","category":"section"},{"location":"guide/m_parser.html","page":"Configuration parser","title":"Configuration parser","text":"(1) Import parser module support.","category":"page"},{"location":"guide/m_parser.html","page":"Configuration parser","title":"Configuration parser","text":"use parser","category":"page"},{"location":"guide/m_parser.html","page":"Configuration parser","title":"Configuration parser","text":"(2) Create instance for parser.","category":"page"},{"location":"guide/m_parser.html","page":"Configuration parser","title":"Configuration parser","text":"call p_create()","category":"page"},{"location":"guide/m_parser.html","page":"Configuration parser","title":"Configuration parser","text":"(3) Parse the input file.","category":"page"},{"location":"guide/m_parser.html","page":"Configuration parser","title":"Configuration parser","text":"call p_parse(file_name)","category":"page"},{"location":"guide/m_parser.html","page":"Configuration parser","title":"Configuration parser","text":"warning: Warning\nIn the mpi environment, only the master node can execute this command. You should broadcast the data manually.","category":"page"},{"location":"guide/m_parser.html","page":"Configuration parser","title":"Configuration parser","text":"(4) Extract parameters.","category":"page"},{"location":"guide/m_parser.html","page":"Configuration parser","title":"Configuration parser","text":"integer :: nband = 2            ! default value\nreal(dp) :: mune = 10.0_dp      ! default value\nlogical :: symm(2)              ! default value\nsymm(1) = .true.\nsymm(2) = .false.\ncall p_get('nband', nband)      ! get single value\ncall p_get('mune', mune)        ! get single value\ncall p_get_vec('symm', symm, 2) ! get array","category":"page"},{"location":"guide/m_parser.html","page":"Configuration parser","title":"Configuration parser","text":"note: Note\nThat if the desired parameter is not contained in the config file, then the default value will not be changed.In the mpi environment, only the master node can execute these commands.The parser DO NOT check the correctness (including number of values, key's name, and datatype of value) of the input file. So, please always monitor the output of ctqmc code which use this parser to parse the input file.","category":"page"},{"location":"guide/m_parser.html","page":"Configuration parser","title":"Configuration parser","text":"(5) Destroy parser.","category":"page"},{"location":"guide/m_parser.html","page":"Configuration parser","title":"Configuration parser","text":"call p_destroy()","category":"page"},{"location":"guide/m_parser.html","page":"Configuration parser","title":"Configuration parser","text":"(6) Broadcast the parameters read from input file.","category":"page"},{"location":"guide/m_parser.html","page":"Configuration parser","title":"Configuration parser","text":"Do not forget to broadcast all of the parameters from master node to children nodes.","category":"page"},{"location":"guide/m_constants.html#Introduction","page":"Constants","title":"Introduction","text":"","category":"section"},{"location":"guide/m_constants.html","page":"Constants","title":"Constants","text":"It is a common module which defines some common used numerical or physical constants. They are as follows:","category":"page"},{"location":"guide/m_constants.html","page":"Constants","title":"Constants","text":"for numerical precision:\nsp\ndp\nfor file units\nmystd\nmyout\nmytmp\nfor numerical constants\npi\nzero\none\ntwo\nhalf\neps6\neps8\nepst\nepss\nczi\ncone\nczero\nfor physical constants\nev2k\nry2e\nha2e ","category":"page"},{"location":"guide/m_constants.html","page":"Constants","title":"Constants","text":"We always need to import this module.","category":"page"},{"location":"guide/m_constants.html#Type","page":"Constants","title":"Type","text":"","category":"section"},{"location":"guide/m_constants.html","page":"Constants","title":"Constants","text":"module","category":"page"},{"location":"guide/m_constants.html#Source","page":"Constants","title":"Source","text":"","category":"section"},{"location":"guide/m_constants.html","page":"Constants","title":"Constants","text":"src/m_constants.f90","category":"page"},{"location":"guide/m_constants.html#Usage","page":"Constants","title":"Usage","text":"","category":"section"},{"location":"guide/m_constants.html","page":"Constants","title":"Constants","text":"(1) Import constants module completely.","category":"page"},{"location":"guide/m_constants.html","page":"Constants","title":"Constants","text":"program test\n    use constants\n\n    implicit none\n\n    real(dp) :: A\n    A = one\nend program","category":"page"},{"location":"guide/m_constants.html","page":"Constants","title":"Constants","text":"(2) Import constants module partially.","category":"page"},{"location":"guide/m_constants.html","page":"Constants","title":"Constants","text":"program test\n    use constants, only : dp\n    use constants, only : one\n\n    implicit none\n\n    real(dp) :: A\n    A = one\nend program","category":"page"},{"location":"index.html#Flink","page":"Home","title":"Flink","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"A collection of Fortran modules and subroutines for scientific computing.","category":"page"},{"location":"index.html#Reference-Manual-Outline","page":"Home","title":"Reference Manual Outline","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"Introduction\nInstallation\nBasic usage\nUser's guide\nConstants\nLinked list\nMessage passaging interface\nConfiguration parser\nSparse matrix\nPseudorandom number generator\nStack\nAnalytical tetrahedron algorithm\nError and exception\nFourier transformation\nSpecial functions\nIntegration\nMatrix\nSpline interpolation\nUtility\nVector\nAppendix\nmake.inc\nFAQ","category":"page"},{"location":"guide/m_stack.html#Introduction","page":"Stack","title":"Introduction","text":"","category":"section"},{"location":"guide/m_stack.html","page":"Stack","title":"Stack","text":"In this module, we implement two types of stack, istack and gstack. The istack type was designed to deal with integer numbers only. However, gstack is a generic type stack. More specifically, it supports the following four data types:","category":"page"},{"location":"guide/m_stack.html","page":"Stack","title":"Stack","text":"integer,\nlogical,\nreal(dp),\ncomplex(dp).","category":"page"},{"location":"guide/m_stack.html","page":"Stack","title":"Stack","text":"The usages, subroutine parameters for these two stack types are almost identical. To implement gstack type, we generally use the unlimited polymorphic features in Fortran 2003/2008 standard. Noted that not all Fortran compilers can support these features. This module was tested using intel Fortran compiler only. We do not guarantee it can work/be compiled correctly for using the other Fortran compilers. So please use it carefully. In the iQIST project, so far we only use the istack type. However, in the future, we will turn to the gstack type.","category":"page"},{"location":"guide/m_stack.html#Type","page":"Stack","title":"Type","text":"","category":"section"},{"location":"guide/m_stack.html","page":"Stack","title":"Stack","text":"module","category":"page"},{"location":"guide/m_stack.html#Source","page":"Stack","title":"Source","text":"","category":"section"},{"location":"guide/m_stack.html","page":"Stack","title":"Stack","text":"src/m_stack.f90","category":"page"},{"location":"guide/m_stack.html#Usage","page":"Stack","title":"Usage","text":"","category":"section"},{"location":"guide/m_stack.html","page":"Stack","title":"Stack","text":"(1) Import stack module support.","category":"page"},{"location":"guide/m_stack.html","page":"Stack","title":"Stack","text":"use stack","category":"page"},{"location":"guide/m_stack.html","page":"Stack","title":"Stack","text":"(2) Declare stack type.","category":"page"},{"location":"guide/m_stack.html","page":"Stack","title":"Stack","text":"type (istack) :: is\ntype (gstack) :: gs","category":"page"},{"location":"guide/m_stack.html","page":"Stack","title":"Stack","text":"(3) Create stack struct.","category":"page"},{"location":"guide/m_stack.html","page":"Stack","title":"Stack","text":"call istack_create(is, 1024)\ncall gstack_create(gs, 1, 1024)                ! create stack to support integer\ncall gstack_create(gs, .true., 1024)           ! create stack to support logical\ncall gstack_create(gs, 1.0_dp, 1024)           ! create stack to support real(dp)\ncall gstack_create(gs, (1.0_dp, 1.0_dp), 1024) ! create stack to support complex(dp)","category":"page"},{"location":"guide/m_stack.html","page":"Stack","title":"Stack","text":"note: Note\nIn istack_create(), the second parameter is the capacity of the stack. However, in gstack_create(), the second parameter means the data type that gstack will manipulate, and the third parameter will be used to determine the capacity. It is an optional parameter.","category":"page"},{"location":"guide/m_stack.html","page":"Stack","title":"Stack","text":"(4) Push element into stack.","category":"page"},{"location":"guide/m_stack.html","page":"Stack","title":"Stack","text":"call istack_push(is, 1)\ncall gstack_push(gs, 1)\ncall gstack_push(gs, .true.)\ncall gstack_push(gs, 2.0_dp)\ncall gstack_push(gs, (1.0_dp, 1.0_dp))","category":"page"},{"location":"guide/m_stack.html","page":"Stack","title":"Stack","text":"(5) Pop element from stack.","category":"page"},{"location":"guide/m_stack.html","page":"Stack","title":"Stack","text":"call istack_pop(is, i) ! i is an integer\ncall gstack_pop(is, j) ! j can be integer, logical, real(dp), and complex(dp)","category":"page"},{"location":"guide/m_stack.html","page":"Stack","title":"Stack","text":"(6) Check status of stack.","category":"page"},{"location":"guide/m_stack.html","page":"Stack","title":"Stack","text":"print *, istack_isfull(is)\nprint *, istack_isempty(is)\nprint *, istack_getsize(is)\nprint *, istack_getrest(is)\n\nprint *, gstack_isfull(gs)\nprint *, gstack_isempty(gs)\nprint *, gstack_getsize(gs)\nprint *, gstack_getrest(gs)","category":"page"},{"location":"guide/m_stack.html","page":"Stack","title":"Stack","text":"The above three function calls will tell you whether the stack is full, whether it is empty, and its capacity.","category":"page"},{"location":"guide/m_stack.html","page":"Stack","title":"Stack","text":"(7) Clean the stack.","category":"page"},{"location":"guide/m_stack.html","page":"Stack","title":"Stack","text":"call istack_clean(is)\ncall gstack_clean(gs)","category":"page"},{"location":"guide/m_stack.html","page":"Stack","title":"Stack","text":"note: Note\nThis operation will reset the top position of the stack, instead of releasing the memory of it. So you can still use the stack after that.","category":"page"},{"location":"guide/m_stack.html","page":"Stack","title":"Stack","text":"(8) Destroy the stack.","category":"page"},{"location":"guide/m_stack.html","page":"Stack","title":"Stack","text":"call istack_destroy(is)\ncall gstack_destroy(gs)","category":"page"},{"location":"guide/m_stack.html","page":"Stack","title":"Stack","text":"note: Note\nWhen the stack was destroyed, you can not use it any more.","category":"page"}]
}
